# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do
  # def install_pods
  #   cocoapods(
  #     clean: true,
  #     podfile: "Podfile",
  #     try_repo_update_on_error: true
  #   )
  # end

  def install_swifty_mocky
    if(File.exist?('/usr/local/Cellar/mint'))
      puts 'Mint exists'
    else
      sh("brew install mint")
    end

    if(File.exist?('/usr/local/bin/swiftymocky'))
      puts 'SwiftyMocky exists'
    else
      sh("mint install MakeAWishFoundation/SwiftyMocky")
    end
  end

  def generate_mock
    puts 'Generate mock'
    sh("swiftymocky generate")
  end

  lane :test do
    install_swifty_mocky()
    # install_pods()
    generate_mock()
    scan(
      workspace: ENV['XCODE_WORKSPACE'],
      scheme: ENV['XCODE_DOMAIN_SCHEME'],
      output_directory: "fastlane/report/domain/",
      clean: true,
      code_coverage: true
    )
    scan(
      workspace: ENV['XCODE_WORKSPACE'],
      scheme: ENV['XCODE_DATA_SCHEME'],
      output_directory: "fastlane/report/data/",
      clean: true,
      code_coverage: true
    )
    scan(
      workspace: ENV['XCODE_WORKSPACE'],
      scheme: ENV['XCODE_PRESENTATION_SCHEME'],
      output_directory: "fastlane/report/presentation/",
      clean: true,
      code_coverage: true
    )
  end
end
