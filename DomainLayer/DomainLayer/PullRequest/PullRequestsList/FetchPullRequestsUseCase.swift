//
//  FetchPullRequestsUseCase.swift
//  Domain
//
//  Created by Victor C Tavernari on 04/04/20.
//  Copyright (c) 2020 Taverna Apps. All rights reserved.
//
//  This file was generated by Mobiplus Clean
//

import Foundation

public protocol FetchPullRequestsUseCaseProtocol {
    var delegateInterfaceAdapter: FetchPullRequestsInterfaceAdapter? { get set }
    func execute(repo: GitRepositoryModel)
}

public enum FetchPullRequestsUseCaseError: Error {
    case unknowReason
}

public protocol FetchPullRequestsInterfaceAdapter {
    func doing()
    func done(data: [GitPullRequestModel])
    func failure(error: Error)
}

public class FetchPullRequestsUseCase: FetchPullRequestsUseCaseProtocol {
    public var delegateInterfaceAdapter: FetchPullRequestsInterfaceAdapter?

    private let repository: GitPullRequestRepositoryProtocol

    public init(repository: GitPullRequestRepositoryProtocol) {
        self.repository = repository
    }

    public func execute(repo: GitRepositoryModel) {
        delegateInterfaceAdapter?.doing()
        repository.list(repo: repo) { result in
            do {
                let pullRequests = try result.handle()
                self.delegateInterfaceAdapter?.done(data: pullRequests)
            } catch { self.delegateInterfaceAdapter?.failure(error: error) }
        }
    }
}
