//
//  GitPullRequestDetailsViewModel.swift
//  Presentation
//
//  Created by Victor C Tavernari on 05/04/20.
//  Copyright (c) 2020 Taverna Apps. All rights reserved.
//
//  This file was generated by Mobiplus Clean
//

import Domain

class GitPullRequestDetailsViewModel: GitPullRequestDetailsViewModelInterface {
    var route = Observable<GitPullRequestDetailsViewModelRoute>(.none)
    var isLoading = Observable<Bool>(false)
    var failMessage = Observable<String?>(nil)
    var pullRequest = Observable<GitPullRequestModel?>(nil)

    private let fetchPullRequestDetailUseCase: FetchPullRequestDetailUseCaseProtocol

    init(fetchPullRequestDetailUseCase: FetchPullRequestDetailUseCaseProtocol) {
        self.fetchPullRequestDetailUseCase = fetchPullRequestDetailUseCase
    }

    func load(pullRequestid: Int, fromRepo repo: GitRepositoryModel) {
        fetchPullRequestDetailUseCase.execute(id: pullRequestid, fromRepo: repo)
    }
}

extension GitPullRequestDetailsViewModel: FetchPullRequestDetailInterfaceAdapter {
    func doing() {
        isLoading.value = true
    }

    func done(data: GitPullRequestModel) {
        pullRequest.value = data
        isLoading.value = false
    }

    func failure(error: Error) {
        failMessage.value = error.localizedDescription
        isLoading.value = false
    }
}
