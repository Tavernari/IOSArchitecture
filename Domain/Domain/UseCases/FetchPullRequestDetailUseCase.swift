//
//  FetchPullRequestDetailUseCase.swift
//  Domain
//
//  Created by Victor C Tavernari on 04/04/20.
//  Copyright (c) 2020 Taverna Apps. All rights reserved.
//
//  This file was generated by Mobiplus Clean
//

import Foundation

public protocol FetchPullRequestDetailInterfaceAdapter {
    func doing()
    func done(data: GitPullRequest)
    func failure(error: Error)
}

public enum FetchPullRequestDetailUseCaseError: Error {
    case unknowReason
}

public protocol FetchPullRequestDetailUseCaseProtocol {
    var delegateInterfaceAdapter: FetchPullRequestDetailInterfaceAdapter? { get set }
    func execute(id: Int, fromRepo repo: GitRepository)
}

public class FetchPullRequestDetailUseCase: FetchPullRequestDetailUseCaseProtocol {
    public var delegateInterfaceAdapter: FetchPullRequestDetailInterfaceAdapter?

    private let repository: GitPullRequestRepositoryProtocol

    public init(repository: GitPullRequestRepositoryProtocol) {
        self.repository = repository
    }

    public func execute(id: Int, fromRepo repo: GitRepository) {
        delegateInterfaceAdapter?.doing()
        repository.get(id: id, fromRepo: repo) { result in
            do {
                let pullRequest = try result.handle()
                self.delegateInterfaceAdapter?.done(data: pullRequest)
            } catch { self.delegateInterfaceAdapter?.failure(error: error) }
        }
    }
}
