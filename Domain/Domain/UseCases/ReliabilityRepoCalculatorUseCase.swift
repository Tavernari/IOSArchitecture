//
//  ReliabilityRepoCalculatorUseCase.swift
//  Domain
//
//  Created by Victor C Tavernari on 02/04/20.
//  Copyright (c) 2020 Taverna Apps. All rights reserved.
//
//  This file was generated by BLU Clean
//

import Foundation

// sourcery: AutoMockable
public protocol ReliabilityRepoCalculatorUseCase {
    func execute(repoStats: GitRepoStatsModel, multiplier: Double) -> Double
}

public class ReliabilityRepoCalculator: ReliabilityRepoCalculatorUseCase {
    public init() {}

    public func execute(repoStats: GitRepoStatsModel, multiplier: Double) -> Double {
        let openedIssues = Double(repoStats.openedIssues)
        let closedIssues = Double(repoStats.closedIssues)
        let issuesScore = (closedIssues * multiplier) + openedIssues

        let proposedPullRequests = Double(repoStats.proposedPullRequests)
        let mergedPullRequests = Double(repoStats.mergedPullRequests)
        let pullRequestScore = (mergedPullRequests * multiplier) + proposedPullRequests

        return issuesScore + pullRequestScore
    }
}
